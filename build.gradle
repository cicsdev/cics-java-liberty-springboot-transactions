plugins
{
	id 'org.springframework.boot' version '2.7.0' 
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'eclipse'
	id 'idea'
	id 'war'
	id 'maven-publish'
}

group = 'com.ibm.cicsdev.springboot'
archivesBaseName='cics-java-liberty-springboot-transactions'
version = '0.1.0'

// If in Eclipse, add Javadoc to the local project classpath
eclipse
{
    classpath
    {
        downloadJavadoc = true
    }
}


repositories
{
	mavenCentral()
}

java
{
    toolchain
    {
        languageVersion = JavaLanguageVersion.of(java_version)
        vendor = JvmVendorSpec.IBM
        implementation = JvmImplementation.J9
    }
}

dependencies
{    
    // CICS BOM (as of May 2020)
    compileOnly enforcedPlatform('com.ibm.cics:com.ibm.cics.ts.bom:5.5-20200519131930-PH25409')
    
    // Don't include JCICS in the final build (no need for version because we have BOM)
    compileOnly("com.ibm.cics:com.ibm.cics.server")   
    
    // Spring Boot web support
    implementation ("org.springframework.boot:spring-boot-starter-web")
    
    // Don't include TomCat in the runtime build
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    
    // Java Transaction API (this is newer and covers up to jta-1.3) - don't include in the final build
    compileOnly ("javax.transaction:javax.transaction-api")
    
    // Spring's Transactional API
    implementation ("org.springframework:spring-tx")           
}



publishing {
    publications {
    	// Publication for JCICS
        maven(MavenPublication) {
            groupId "${group}"
            version "${version}"
            artifactId "${archivesBaseName}" 
            artifact bootWar
        }
    }
    
    // Configure the Maven repository to publish to somewhere which is configurable
    // with environment variables from outside gradle.
    //
    // For example:
    //   gradle build publish \
    //   -Ppublish_repo_releases_url="file://my-folder" \
    //   -Ppublish_repo_releases_name="my-maven-repo"
    //
    repositories {
        maven {
            url = "${publish_repo_releases_url}/${publish_repo_releases_name}"
        }
    }

}
